<?xml version="1.0"?>
<!-- vim: set syntax=xml: -->
<BES>
  <Wizard>
    <Title>Custom - BaselineStatusResults</Title>
    <UIHooks LaunchType="Document" RequiresAuthoring="false" Menu="Dashboards"></UIHooks>
    <DefaultPage>BaselineStatusResults</DefaultPage>
    <Page Name="BaselineStatusResults" DocType="HTML5" > 
        <Title>Baseline Status Results</Title>
        <Head><![CDATA[<meta http-equiv="X-UA-Compatible" content="IE=9"><script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.1.1/jquery.min.js" integrity="sha256-hVVnYaiADRTO2PzUGmuLJr8BLUSjGIZsDYGmIJLv2b8=" crossorigin="anonymous"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js" integrity="sha256-KM512VNnjElC30ehFwehXjx1YCHPiQkOPmqnrWtpccM=" crossorigin="anonymous"></script><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.css" integrity="sha256-rByPlHULObEjJ6XQxW/flG2r+22R5dKiAoef+aXWfik=" crossorigin="anonymous" />]]></Head>
        <HTML><![CDATA[
<h2>Baseline Status Results</h2>

<div class="ui-widget">
    <label>Choose a baseline to examine: TODO - change relevance that lists baselines</label>
    <select id="baselinechoice">
        <?Relevance ( html tag ("option", attr lists of ("value", id of it as string) of it, id of it as string & " " & name of it ) ) of top level bes actions whose(multiple flag of it AND exists name of it AND "Multiple Action Group" != name of it AND "Open" = state of it AND (now - time issued of it) <= 90 * day AND exists statuses whose("Failed" = it as string OR "Waiting" = it as string) of results of it) ?>
    </select>
</div>
<br />
<br />
<table>
    <thead><tr><th>Failure%</th><th>#Failed</th><th>#Total</th><th>Component Name</th></tr></thead>
    <tbody id="results">
    
    </tbody>
</table>


<style>
table, th, td {
    border: 1px solid black;
    border-collapse: collapse;
}
th, td {
    padding: 5px;
}
  .custom-combobox {
    position: relative;
    display: inline-block;
  }
  .custom-combobox-toggle {
    position: absolute;
    top: 0;
    bottom: 0;
    margin-left: -1px;
    padding: 0;
  }
  .custom-combobox-input {
    margin: 0;
    padding: 5px 10px;
  }
</style>
<script>

// https://bigfix.me/relevance/details/3019196
// http://jqueryui.com/autocomplete/#combobox
// TODO - this could probably be a lot better than just taken from a demo
  $( function() {
    $.widget( "custom.combobox", {
      _create: function() {
        this.wrapper = $( "<span>" )
          .addClass( "custom-combobox" )
          .insertAfter( this.element );
 
        this.element.hide();
        this._createAutocomplete();
        this._createShowAllButton();
      },
 
      _createAutocomplete: function() {
        var selected = this.element.children( ":selected" ),
          value = selected.val() ? selected.text() : "";
 
        this.input = $( "<input>" )
          .appendTo( this.wrapper )
          .val( value )
          .attr( "title", "" )
          .addClass( "custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left" )
          .autocomplete({
            delay: 0,
            minLength: 0,
            source: $.proxy( this, "_source" )
          })
          .tooltip({
            classes: {
              "ui-tooltip": "ui-state-highlight"
            }
          });
 
        this._on( this.input, {
          autocompleteselect: function( event, ui ) {
            ui.item.option.selected = true;
            this._trigger( "select", event, {
              item: ui.item.option
            });
          },
 
          autocompletechange: "_removeIfInvalid"
        });
      },
 
      _createShowAllButton: function() {
        var input = this.input,
          wasOpen = false;
 
        $( "<a>" )
          .attr( "tabIndex", -1 )
          .attr( "title", "Show All Items" )
          .tooltip()
          .appendTo( this.wrapper )
          .button({
            icons: {
              primary: "ui-icon-triangle-1-s"
            },
            text: false
          })
          .removeClass( "ui-corner-all" )
          .addClass( "custom-combobox-toggle ui-corner-right" )
          .on( "mousedown", function() {
            wasOpen = input.autocomplete( "widget" ).is( ":visible" );
          })
          .on( "click", function() {
            input.trigger( "focus" );
 
            // Close if already visible
            if ( wasOpen ) {
              return;
            }
 
            // Pass empty string as value to search for, displaying all results
            input.autocomplete( "search", "" );
          });
      },
 
      _source: function( request, response ) {
        var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), "i" );
        response( this.element.children( "option" ).map(function() {
          var text = $( this ).text();
          if ( this.value && ( !request.term || matcher.test(text) ) )
            return {
              label: text,
              value: text,
              option: this
            };
        }) );
      },
 
      _removeIfInvalid: function( event, ui ) {
 
        // Selected an item, nothing to do
        if ( ui.item ) {
          return;
        }
 
        // Search for a match (case-insensitive)
        var value = this.input.val(),
          valueLowerCase = value.toLowerCase(),
          valid = false;
        this.element.children( "option" ).each(function() {
          if ( $( this ).text().toLowerCase() === valueLowerCase ) {
            this.selected = valid = true;
            return false;
          }
        });
 
        // Found a match, nothing to do
        if ( valid ) {
          return;
        }
 
        // Remove invalid value
        this.input
          .val( "" )
          .attr( "title", value + " didn't match any item" )
          .tooltip( "open" );
        this.element.val( "" );
        this._delay(function() {
          this.input.tooltip( "close" ).attr( "title", "" );
        }, 2500 );
        this.input.autocomplete( "instance" ).term = "";
      },
 
      _destroy: function() {
        this.wrapper.remove();
        this.element.show();
      }
    });
 
    $( "#combobox" ).combobox();
    $( "#toggle" ).on( "click", function() {
      $( "#combobox" ).toggle();
    });
  } );
  
$(document).ready(function(){
    $("select").combobox();
    
    $( ".custom-combobox-input" ).on( "autocompleteselect", function( event, ui ) {
        //alert( ui.item.value.toString() );
        //alert( bigfix.relevance.evaluate(' trs of ( concatenations of tds of ( (item 0 of it * 100 / item 1 of it) as string & "%25"; item 0 of it as string; item 1 of it as string; item 2 of it) ) of (number of statuses whose("Failed" = it as string OR "Waiting" = it as string) of results of it, number of statuses of results of it, names of it) of member actions of top level bes actions whose("' + ui.item.value + '" contains (id of it as string & " " & name of it)) ') );
        $("#results").html( bigfix.relevance.evaluate(' trs of ( concatenations of tds of ( ( (item 0 of it * 100 / item 1 of it) | 0 ) as string & "%25"; item 0 of it as string; item 1 of it as string; item 2 of it) ) of (number of statuses whose("Failed" = it as string OR "Waiting" = it as string) of results of it | 0, number of statuses of results of it | 0, names of it) of member actions whose(exists statuses whose("Failed" = it as string OR "Waiting" = it as string) of results of it) of top level bes actions whose(multiple flag of it AND exists name of it AND "' + ui.item.value.toString() + '" contains (id of it as string & " " & name of it)) ') );
    });
});

/***********************************************/
var bigfix = bigfix?bigfix:{};
bigfix.relevance = {};

	bigfix.relevance.evaluate = function(relevance, callbackObj) {
	
		if(callbackObj !== undefined && callbackObj !== null) {
			var results;
			
			if(callbackObj.failure !== undefined && callbackObj.failure !== null) {
				callbackObj.failure = bigfix.relevance.errorWrapper(relevance, callbackObj.failure);
			} else {
				callbackObj.failure = bigfix.relevance.errorWrapper(relevance, bigfix.relevance.defaultErrorHandler);
			}
			
			try {
				results = Relevance(relevance, callbackObj);
			} catch (e2) {
				return undefined;
			}	
			
			return results;
		} else {
			var results;
					
			try {
				results = EvaluateRelevance(relevance);
			} catch (e2) {
				return undefined;
			}	
			
			return results;
		}
	};

	bigfix.relevance.errorWrapper = function(relevance, customErrorHandler) {
		if(customErrorHandler !== undefined && customErrorHandler != null) {
			return function(errorMessage){
				customErrorHandler(relevance, new Error(errorMessage));
			};
		}
		
		return function(errorMessage){
			bigfix.relevance.defaultErrorHandler(relevance, new Error(errorMessage));
		};
	};


	bigfix.relevance.defaultErrorHandler = function(relevance, error){
		// rethrow error
		throw error;
	};
/***********************************************/

</script>
        ]]></HTML>
    </Page>
  </Wizard>
</BES>
