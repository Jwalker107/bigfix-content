<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>BIOS Update {{vendor}} {{model}} to {{bios_version}} - Windows</Title>
		<Description><![CDATA[<P>This task will suspend BitLocker if applicable, and update the BIOS for {{vendor}} {{model}} to {{bios_version}}<BR><BR>BIOS Passwords are not CURRENTLY handled by this task. Dell Command Monitor or similar vendor software is required to populate `wmis "ROOT\DCIM\SYSMAN"` in order to detect if the BIOS password is set properly, otherwise it is assumed the BIOS Password is NOT set.<BR><BR>NOTE: Windows Vista and 2008 use a different command to manage BitLocker, not currently tested there. This should work on those OSes as long as BitLocker is not enabled.<BR></P>]]></Description>
		<Relevance>windows of operating system</Relevance>
		<Relevance><![CDATA[/* Windows XP or Higher */ version of operating system >= "5.1"]]></Relevance>
		<Relevance>/* Check Vendor */ exists values "vendor" whose(it as string as trimmed string as uppercase contains "{{vendor}}" as trimmed string as uppercase) of structures "bios_information" of smbios</Relevance>
		<Relevance>/* Check Model */ exists values "product_name" whose(it as string as trimmed string as uppercase contains "{{model}}" as trimmed string as uppercase) of structures "system_information" of smbios</Relevance>
		<Relevance><![CDATA[/* Check for older BIOS */ exists values "bios_version" whose( it as string as version < "{{bios_version}}" as version ) of structures "bios_information" of smbios]]></Relevance>
		<Relevance>/* to be removed once BIOS Password handling added: */ not exists boolean values whose(it) of selects "IsSet FROM DCIM_BIOSPassword where ElementName='BiosSetupPassword'" of wmis "ROOT\DCIM\SYSMAN"</Relevance>
		<Category></Category>
		<DownloadSize>999</DownloadSize>
		<Source>Internal</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2020-05-19</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Tue, 19 May 2020 17:47:47 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
// -- START:DOWNLOADS -------------------------

// {{BIOS_Update_Prefetch}}

// -- END:DOWNLOADS ---------------------------


// -- Check if bios_password is required: --
// TODO: change this check once bios_password is handled by fixlet description input
continue if{ not exists boolean values whose(it) of selects "IsSet FROM DCIM_BIOSPassword where ElementName='BiosSetupPassword'" of wmis "ROOT\DCIM\SYSMAN" }

action uses wow64 redirection {not x64 of operating system}

// Suspend BitLocker (if applicable)
if { exists it whose( exists integer values whose(it = 1) of properties "ProtectionStatus" of it OR ( exists integer values whose(it = 0) of properties "ProtectionStatus" of it AND exists integer values whose(it = 2 OR it = 4) of properties "ConversionStatus" of it ) ) of select objects "ConversionStatus, ProtectionStatus, DriveLetter from Win32_EncryptableVolume" whose(string value of property "DriveLetter" of it starts with (name of drive of system folder)) of wmis "root\CIMv2\Security\MicrosoftVolumeEncryption" }

// Handle BitLocker Resume after reboot for Win7 and Win2008R2
if {version of operating system < "6.2.0.0"}
regset64 "[HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\RunOnce]" "ResumeBitLocker"="manage-bde -protectors -enable { /* C: */ name of drive of system folder}"
endif

if { exists files "manage-bde.exe" of (system folders; system x64 folders) }
// Suspend BitLocker Using: `manage-bde`
wait manage-bde -protectors -disable { /* C: */ name of drive of system folder}{ if (version of operating system < "6.2.0.0") then "" else " -RebootCount 1" }
else
// Suspend BitLocker Using Powershell: `Suspend-BitLocker`
wait powershell -ExecutionPolicy Bypass -command "Suspend-BitLocker -mountpoint '{ /* C: */ name of drive of system folder}'{ if (version of operating system < "6.2.0.0") then "" else " -rebootcount 1" }"
endif

// Check exit code: Should be 0
continue if {exit code of action = 0}

// verify BitLocker Protection Suspended: (not exactly the task relevance due to possibilty of encryption in progress)
continue if{ not exists integer values whose(it = 1) of properties "ProtectionStatus" of select objects "ProtectionStatus, DriveLetter from Win32_EncryptableVolume" whose(string value of property "DriveLetter" of it starts with (name of drive of system folder) ) of wmis "root\CIMv2\Security\MicrosoftVolumeEncryption" }

endif
// -- ENDIF for Suspend BitLocker --


// ----------------------------------------------------------------

// Update BIOS:

// TODO: {{BIOS_Update_ActionScript}}

// TODO: If BIOS Password Set / Provided Then Handle passing BIOS Password to update command

action requires restart "BIOS_Update"

// Optional: force update of analysis properties:
// notify client ForceRefresh
]]></ActionScript>
		</DefaultAction>
	</Task>
</BES>
