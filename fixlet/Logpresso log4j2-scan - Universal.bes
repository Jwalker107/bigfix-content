<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Run: log4j2-scan v2.3.6 - Universal JAR - System JRE</Title>
		<Description><![CDATA[This task will run log4j2-scan v2.3.6 scanner.<br />
<TABLE>
  <TBODY>
    <TR>
      <TD
        ><LABEL for="exclusionlist">List additional directories to be excluded from the scan, one per
          line:</LABEL
        >
      </TD>
      <TD
        ><TEXTAREA
          id="exclusionlist" rows="10" cols="40" name="exclusionlist"></TEXTAREA></TD
    ></TR>
  </TBODY>
</TABLE>
<script>
  document.body.ontakeaction = function () {
    TakeFixletAction(
      Relevance("id of current fixlet"),
      Relevance("id of current bes site"),
      "Action1",
      { exclusionlist: document.getElementById("exclusionlist").value },
      {}
    );
    return false;
  };
</script>

		<P><H3>NOTE:</H3> This version of the scan fixlet downloads the JAR version of log4j2-scan.  The system-default Java Runtime will be used.&nbsp; This requires the Java command to be present in the default system PATH variable.</P>
		]]>		</Description>
		<Relevance>if exists property "in proxy agent context" then not in proxy agent context else true</Relevance>
		<Relevance>exists files whose(name of it as lowercase = "java" OR name of it as lowercase = "java.exe") of ( ( (folders it) of unique values of (it as trimmed string) of substrings separated by (";";":") of values of (variables "PATH" of it; (if (windows of operating system) then (x64 variables "PATH" of it) else NOTHINGS) ) of environments ) ; ( (folders "bin" of folders of folders of (folders "\Program Files"; folder "\Program Files (x86)")) ) )</Relevance>
		<Category></Category>
		<DownloadSize>44346</DownloadSize>
		<Source>log4j2-scan</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2021-12-19</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>action-ui-metadata</Name>
			<Value>{ "version":"2.3.6","size":44346 }</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Mon, 20 Dec 2021 03:50:40 +0000</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-relevance-evaluation-period</Name>
			<Value>01:00:00</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to run log4j2-scan v2.3.6.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
//parameter "exclusionlist" is provided in the Description tab
begin prefetch block
	// Download log4j2-scan:
	add prefetch item name=logpresso-log4j2-scan.jar sha1=150cf46ce2b449e20923baed01d6f90d585c35f4 size=44346 url=https://github.com/logpresso/CVE-2021-44228-Scanner/releases/download/v2.3.6/logpresso-log4j2-scan-2.3.6.jar sha256=511e8ce2ba7ae96ae2cf60d867ba449787317d145c640eba2790a0d8488459d7
	collect prefetch items
end prefetch block

utility __Download/logpresso-log4j2-scan.jar

folder create {pathname of parent folder of parent folder of client folder of site "actionsite"}/BPS-Scans
parameter "BPSFolder"="{pathname of folder "BPS-Scans" of parent folder of parent folder of client folder of site "actionsite"}{if windows of operating system then "\" else "/"}"
parameter "ListFile"="{parameter "BPSFolder"}results-log4j2-scan.txt"
parameter "ExclusionFile"="{parameter "BPSFolder"}log4j2-path-exclusions.txt"

delete "{pathname of file "logpresso-log4j2-scan.jar" of folder (parameter "BPSFolder")}"

// Copy the scanner JAR file to client folder
copy __Download/logpresso-log4j2-scan.jar "{parameter "BPSFolder"}/logpresso-log4j2-scan.jar"

// Delete previous items
delete "{parameter "ListFile"}"
delete __appendfile
delete "{parameter "ExclusionFile"}"

//build exclusions list
appendfile {concatenation (if windows of operating system then "%0d%0a" else "%0a") of (unique values of (it as trimmed string) whose(it != "") of substrings separated by "%0a" of (parameter "exclusionlist" | ""))}
 
appendfile {concatenation (if windows of operating system then "%0d%0a" else "%0a") of ("/mnt";"/dev";"/cdrom")}
  
if {exists properties "type" of types "filesystem"}
 appendfile {concatenation (if windows of operating system then "%0d%0a" else "%0a") of mount points of filesystems whose (type of it != "DRIVE_FIXED" ) }
endif
 
//mac-specific
if {exists properties "type" of types "volume"}
 appendfile {concatenation (if windows of operating system then "%0d%0a" else "%0a") of (it as string) of volumes whose (type of it != "DRIVE_FIXED" ) }
endif
 
if {exists properties "filesystem type" of types "filesystem"}
 appendfile {concatenation (if windows of operating system then "%0d%0a" else "%0a") of mount points of filesystems whose (filesystem type of it is contained by set of ("cgroup";"cifs";"nfs";"nfs3";"nfs4";"cgroup2";"sysfs";"proc";"cpuset") ) }
endif

copy __appendfile "{parameter "ExclusionFile"}"


if {windows of operating system}
  runhidden cmd.exe /c "cd "{parameter "BPSFolder"}" & java -jar .\logpresso-log4j2-scan.jar --all-drives --scan-log4j1 --no-symlink --no-empty-report --exclude-fs nfs,nfs3,nfs4,cifs,tmpfs,devtmpfs,iso9660 --exclude-config "{parameter "ExclusionFile"}"> "{parameter "ListFile"}""
else // non-Windows operating system:
  // Get shell binary, should return /bin/sh in most cases:
  parameter "shell_bin" = "{  tuple string items 0 of concatenations ", " of ( pathnames of files "/bin/sh"; pathnames of files whose(name of it as lowercase = "sh" OR name of it as lowercase = "sh.exe") of (folders it) of unique values of (it as trimmed string) of substrings separated by (";";":") of values of (variables "PATH" of it ) of environments) }"

  // Run log4j2-scan:
  // WARNING: this attempts to exclude network shares, but might not be perfect.
  run {parameter "shell_bin"} -c "cd '{parameter "BPSFolder"}' && java -jar ./logpresso-log4j2-scan.jar --scan-log4j1 --no-symlink --no-empty-report --exclude-fs nfs,nfs3,nfs4,cifs,tmpfs,devtmpfs,iso9660 --exclude-config '{parameter "ExclusionFile"}' / > '{parameter "ListFile"}'"
endif

// Give 30 seconds for startup before checking
parameter "StartTime"="{now}"
pause while {not exists file (parameter "ListFile") and now - (parameter "StartTime" as time) < 30 * second }
// Check that an output log file has been created as an indicator that the scan has launched successfully
continue if {exists file (parameter "ListFile") whose (modification time of it >= active start time of action)}

// End]]></ActionScript>
		</DefaultAction>
	</Task>
</BES>
