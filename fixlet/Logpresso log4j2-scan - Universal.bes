<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Run: log4j2-scan v2.3.3 - Universal JAR - System JRE</Title>
		<Description><![CDATA[This task will run log4j2-scan v2.3.3 scanner.<br />
<TABLE>
  <TBODY>
    <TR>
      <TD
        ><LABEL for="exclusionlist"
          >List additional directories to be excluded from the scan, one per
          line:</LABEL
        >
      </TD>
      <TD
        ><TEXTAREA
          id="exclusionlist"
          rows="10"
          cols="40"
          name="exclusionlist"
        ></TEXTAREA></TD
    ></TR>
  </TBODY>
</TABLE>
<script>
  document.body.ontakeaction = function () {
    TakeFixletAction(
      Relevance("id of current fixlet"),
      Relevance("id of current bes site"),
      "Action1",
      { exclusionlist: document.getElementById("exclusionlist").value },
      {}
    );
    return false;
  };
</script>

		<P><H3>NOTE:</H3> This version of the scan fixlet downloads the JAR version of log4j2-scan.  The system-default Java Runtime will be used.&nbsp; This requires the Java command to be present in the default system PATH variable.</P>
		]]></Description>
		<Relevance>if exists property "in proxy agent context" then not in proxy agent context else true</Relevance>
		<Relevance>exists files whose(name of it as lowercase = "java" OR name of it as lowercase = "java.exe") of ( ( (folders it) of unique values of (it as trimmed string) of substrings separated by (";";":") of values of (variables "PATH" of it; (if (windows of operating system) then (x64 variables "PATH" of it) else NOTHINGS) ) of environments ) ; ( (folders "bin" of folders of folders of (folders "\Program Files"; folder "\Program Files (x86)")) ) )</Relevance>
		<Category></Category>
		<DownloadSize>41718</DownloadSize>
		<Source>log4j2-scan</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2021-12-19</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>action-ui-metadata</Name>
			<Value>{ "version":"2.3.3","size":41718 }</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Sun, 19 Dec 2021 16:00:18 +0000</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-relevance-evaluation-period</Name>
			<Value>01:00:00</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to run log4j2-scan v2.3.3.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
//parameter "exclusionlist" is provided in the Description tab
begin prefetch block
	// Download log4j2-scan:
	add prefetch item name=logpresso-log4j2-scan.jar sha1=b64baec5f8028cdf15769a4007b4bdb69cf8396f size=41718 url=https://github.com/logpresso/CVE-2021-44228-Scanner/releases/download/v2.3.3/logpresso-log4j2-scan-2.3.3.jar sha256=36aa00fc7340fac11686de6bd9800356283fb4894835a918196bc0f3df8c3168
	collect prefetch items
end prefetch block

utility __Download/logpresso-log4j2-scan.jar

folder create {pathname of parent folder of parent folder of client folder of site "actionsite"}/BPS-Scans
parameter "BPSFolder"="{pathname of folder "BPS-Scans" of parent folder of parent folder of client folder of site "actionsite"}{if windows of operating system then "\" else "/"}"
parameter "ListFile"="{parameter "BPSFolder"}results-log4j2-scan.txt"
parameter "ExclusionFile"="{parameter "BPSFolder"}log4j2-path-exclusions.txt"

delete "{pathname of file "logpresso-log4j2-scan.jar" of folder (parameter "BPSFolder")}"

// Copy the scanner JAR file to client folder
copy __Download/logpresso-log4j2-scan.jar "{parameter "BPSFolder"}/logpresso-log4j2-scan.jar"

// Delete previous items
delete "{parameter "ListFile"}"
delete __appendfile
delete "{parameter "ExclusionFile"}"

if {windows of operating system}

// Create Exclusions list file:
appendfile {concatenation "%0d%0a" of unique values of (it as trimmed string) whose(it != "") of substrings separated by "%0a" of (parameter "exclusionlist" | "")}
copy __appendfile "{parameter "ExclusionFile"}"

runhidden cmd.exe /c "cd "{parameter "BPSFolder"}" & java -jar .\logpresso-log4j2-scan.jar --all-drives --scan-log4j1 --no-symlink --no-empty-report --exclude-fs nfs,nfs3,nfs4,cifs,tmpfs,devtmpfs,iso9660 --exclude-config "{parameter "ExclusionFile"}"> "{parameter "ListFile"}""

else // non-Windows operating system:

// Create Exclusions list file:
appendfile {concatenation (if windows of operating system then "%0d%0a" else "%0a") of unique values whose(it does not contain " ") of (it;"/mnt";"/dev";"/cdrom"; (unique values of (it as trimmed string) whose(it != "") of substrings separated by "%0a" of (parameter "exclusionlist" | "")) ) of items 0 of (mount points of it, filesystem types of it, types of it) whose(item 2 of it != "DRIVE_FIXED" OR item 1 of it is contained by set of ("cgroup";"cifs";"nfs";"nfs3";"nfs4";"cgroup2";"sysfs";"proc";"cpuset")) of filesystems}

copy __appendfile "{parameter "ExclusionFile"}"

// Get shell binary, should return /bin/sh in most cases:
parameter "shell_bin" = "{  tuple string items 0 of concatenations ", " of ( pathnames of files "/bin/sh"; pathnames of files whose(name of it as lowercase = "sh" OR name of it as lowercase = "sh.exe") of (folders it) of unique values of (it as trimmed string) of substrings separated by (";";":") of values of (variables "PATH" of it ) of environments) }"

// Run log4j2-scan:
// WARNING: this attempts to exclude network shares, but might not be perfect.
run {parameter "shell_bin"} -c "cd '{parameter "BPSFolder"}' && java -jar ./logpresso-log4j2-scan.jar --scan-log4j1 --no-symlink --no-empty-report --exclude-fs nfs,nfs3,nfs4,cifs,tmpfs,devtmpfs,iso9660 --exclude-config '{parameter "ExclusionFile"}' / > '{parameter "ListFile"}'"
endif

// Give 30 seconds for startup before checking
parameter "StartTime"="{now}"
pause while {not exists file (parameter "ListFile") and now - (parameter "StartTime" as time) < 30 * second }
// Check that an output log file has been created as an indicator that the scan has launched successfully
continue if {exists file (parameter "ListFile") whose (modification time of it >= active start time of action)}

// End]]></ActionScript>
		</DefaultAction>
	</Task>
</BES>
