<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Put computers to sleep that have been idle for more than 8 hours - Universal</Title>
		<Description><![CDATA[&lt;enter a description of the task here&gt; ]]></Description>
		<Relevance>/* PowerManagement not applicable to Proxy agents */ if exists property "in proxy agent context" then ( not in proxy agent context ) else true</Relevance>
		<Relevance>/* script for sleep NOT IMPLEMENTED for unix/linux */ not unix of operating system</Relevance>
		<Relevance>/* PowerManagement not applicable to LastManStanding machines */ not exists values whose(1 = it as integer) of settings "PowerManagement_LastManStanding" of clients</Relevance>
		<Relevance>/* PowerManagement not applicable to machines that consume 0 watts, which is assumed if any metric is 0 then all should be 0, which may not always be correct. */ not exists values whose(it as integer = 0) of settings whose(name of it starts with "PowerManagement_" AND name of it ends with "Watts") of clients</Relevance>
		<Relevance><![CDATA[/* PowerManagement not applicable to VirtualMachines */ not exists it whose("Virtual" = it) of ( if ((version of client < "8.0") or (if (windows of operating system) then (platform id of operating system = 3) else false) or (if (version of client >= "8.2.1078.0") then in proxy agent context else false)) then "N/A" else (if exists true whose (if true then( (((item 0 of it contains "VMware") or ((item 0 of it contains "Microsoft") and not (item 1 of it as lowercase contains "surface")) or (item 0 of it contains "Xen")) of ((value "manufacturer" of it as string, value "product_name" of it as string) of structure "system_information" of smbios))) else false) then "Virtual" else "Physical") )]]></Relevance>
		<Relevance>/* PowerManagement not applicable to Servers */ not exists it whose("Server" = it) of ( if (exists true whose(if true then exists device type else false ))then device type else(if (exists value of settings "_BESClient_DeviceTypeOverride" of client)then (value of setting "_BESClient_DeviceTypeOverride" of client)else(if(it starts with "Mac OS X")then(if(it contains "Server")then "Server" else (if(((exists key whose(it as string as lowercase contains "battery") of entries of dictionaries of nodes of it) OR (exists node "AppleACPIPlatformExpert/SMB0/AppleECSMBusController/AppleSmartBatteryManager" of service plane of iokit registry)of it)of service plane of iokit registry)then "Laptop" else "Desktop"))else(if (it starts with "Win")then (if (it as lowercase contains "mobile")then "Mobile" else(if (exists key "HKEY_LOCAL_MACHINE\HARDWARE\Description\System\BIOS" whose (value "SystemManufacturer" of it as string as lowercase contains "vmware") of registry)then "Server" else(if (nt workstation product type != product type of operating system)then "Server" else(if (exists active device whose (class of it as lowercase = "battery" AND service key value name of it as lowercase = "cmbatt" AND (description of it as lowercase contains "microsoft acpi" OR description of it as lowercase contains "acpi microsoft")))then "Laptop" else "Desktop"))))else(if (it contains "Linux" OR it contains "AIX" OR it contains "Sun" OR it contains "HP-UX" OR it contains "VMware") then ("Server") else(if((it contains "ios" OR it contains "android" OR it contains "ipad" OR it contains "iphone" OR it contains "ipod" OR it contains "smartphone" OR it contains "msft-" OR it contains "nokia" OR it contains "palm" OR it contains "pocketpc" OR it contains "htc")of(it as lowercase)) then "Mobile" else "Unknown")))))of name of operating system )</Relevance>
		<Relevance><![CDATA[/* System idle for more than 8 hours */ exists (now - it) whose(it > 8 * hour) of starts of ranges of current system intervals whose(idle state = state of it) of power histories]]></Relevance>
		<Category></Category>
		<Source>Internal</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2016-12-27</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Wed, 28 Dec 2016 05:49:01 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell">
if { windows of operating system }
    // NOT TESTED
    run rundll32.exe powrprof.dll,SetSuspendState 0,1,0
    // http://winaero.com/blog/how-to-sleep-a-windows-computer-from-the-command-line/
endif

if { mac of operating system }
    // NOT TESTED
    run pmset sleepnow
    // http://osxdaily.com/2012/07/22/sleep-a-mac-from-the-command-line/
endif

if { unix of operating system }
    // NOT IMPLEMENTED
    // http://superuser.com/questions/154934/what-is-the-shell-command-to-let-a-linux-box-go-sleep
    // https://www.linux.com/News/how-suspend-and-hibernate-laptop-under-linux
endif
</ActionScript>
		</DefaultAction>
	</Task>
</BES>
