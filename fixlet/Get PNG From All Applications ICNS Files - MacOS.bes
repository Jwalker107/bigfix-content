<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Get PNG From All Applications ICNS Files - MacOS</Title>
		<Description><![CDATA[&lt;enter a description of the task here&gt; ]]></Description>
		<Relevance>mac of operating system</Relevance>
		<Category></Category>
		<DownloadSize>82663</DownloadSize>
		<Source>Internal</Source>
		<SourceID>jgstew</SourceID>
		<SourceReleaseDate>2019-10-02</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Wed, 02 Oct 2019 16:13:04 +0000</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<DefaultAction ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to deploy this action.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
prefetch osxiconutils.zip sha1:f55c0628914a3e50306c7ab5d613896aead0be9f size:82663 https://sveinbjorn.org/files/software/osxiconutils.zip sha256:d7a58dc32a5a8596973c2aee3c5698d28ca5df7650882b18e9bfa295a5241f83

wait /usr/bin/unzip -qu __Download/osxiconutils.zip -d /tmp

// https://sveinbjorn.org/files/manpages/icns2image.man.html

folder create /tmp/_BigFix/Icons

// Make sure __createfile doesn't already exist
delete __createfile

// generate __createfile contents: (must escape {})
createfile until _END_OF_FILE_
#!/usr/bin/env bash

{ concatenations "%0a" of ("bash -c %22/tmp/bin/icns2image -r 128 -t png " & item 0 of it & " /tmp/_BigFix/Icons/" & item 1 of it & ".png%22") of ( (concatenations (if windows of operating system then "^ " else "\ ") of substrings separated by " " of it) of (pathname of folders "Resources" of folders "Contents" of items 0 of it & "/" & item 1 of it) of (it, (it & ".icns") of (preceding text of last ".icns" of it | it) of strings "CFBundleIconFile" of dictionaries of files "Contents/Info.plist" of it) of it , (concatenations (if windows of operating system then "^ " else "\ ") of substrings separated by " " of it) of preceding texts of lasts ".app" of names of it ) of folders whose(name of it as lowercase ends with ".app") of folders "/Applications" }
_END_OF_FILE_

// delete destination of __createfile to be sure it doesn't already exist
delete /tmp/run_icns2image.sh

// put file in place to run:
copy __createfile /tmp/run_icns2image.sh

// run it, waiting a maximum of 30 minutes:
override wait
timeout_seconds=1800
wait bash /tmp/run_icns2image.sh

// ToDo: Base64 the icon files on the command line

// Make sure __createfile doesn't already exist
delete __createfile

// generate __createfile contents: (must escape {})
createfile until _END_OF_FILE_
#!/usr/bin/env bash

{ concatenations "%0a" of ("bash -c %22base64 " & it & " > " & it & ".base64%22") of (concatenations (if windows of operating system then "^ " else "\ ") of substrings separated by " " of it) of pathnames of files ending in ".png" of folders "/tmp/_BigFix/Icons" }
_END_OF_FILE_

// delete destination of __createfile to be sure it doesn't already exist
delete /tmp/run_base64_encode.sh

// put file in place to run:
copy __createfile /tmp/run_base64_encode.sh

// run it, waiting a maximum of 30 minutes:
override wait
timeout_seconds=1800
wait bash /tmp/run_base64_encode.sh

// https://bigfix.me/relevance/details/3016285
// https://github.com/jgstew/bigfix-content/blob/master/actionscript/Action_CreateFileTemplateBash.txt

// ( preceding texts of lasts ".app" of names of it, (concatenations (if windows of operating system then "^ " else "\ ") of substrings separated by " " of it) of (pathname of folders "Resources" of folders "Contents" of items 0 of it & "/" & item 1 of it) of (it, (it & ".icns") of (preceding text of last ".icns" of it | it) of strings "CFBundleIconFile" of dictionaries of files "Contents/Info.plist" of it) of it) of folders whose(name of it as lowercase ends with ".app") of folders "/Applications"
]]></ActionScript>
		</DefaultAction>
	</Task>
</BES>
